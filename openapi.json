{
  "openapi": "3.0.0",
  "info": {
    "title": "Tales of the Valiant API",
    "version": "0.1.1"
  },
  "paths": {
    "/api/v1/dice/roll": {
      "get": {
        "summary": "Roll dice",
        "parameters": [
          {
            "name": "sides",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "timesToRoll",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "options",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful dice roll",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/character/create": {
      "post": {
        "summary": "Create a character",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CharacterCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Character created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Character with this name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/character/name/{name}": {
      "get": {
        "summary": "Get character by name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the character (case-insensitive)"
          }
        ],
        "responses": {
          "200": {
            "description": "Character found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterResponse"
                }
              }
            }
          },
          "404": {
            "description": "Character not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/character/id/{id}": {
      "get": {
        "summary": "Get character by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the character"
          }
        ],
        "responses": {
          "200": {
            "description": "Character found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid character ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Character not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update character by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the character"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CharacterCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Character updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Character not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete character by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the character"
          }
        ],
        "responses": {
          "200": {
            "description": "Character deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid character ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Character not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/characters": {
      "get": {
        "summary": "Get all characters",
        "responses": {
          "200": {
            "description": "List of all characters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CharacterResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backgrounds": {
      "get": {
        "summary": "Get all backgrounds",
        "description": "Returns a list of all available background names",
        "operationId": "getAllBackgrounds",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "backgrounds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Soldier", "Scholar", "Noble", "Artisan"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backgrounds/{name}": {
      "get": {
        "summary": "Get background by name",
        "description": "Returns detailed information about a specific background",
        "operationId": "getBackgroundByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the background (case-insensitive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Background"
                }
              }
            }
          },
          "404": {
            "description": "Background not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "background 'invalid' does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/heritages": {
      "get": {
        "summary": "Get all heritages",
        "description": "Returns a list of all available heritage names",
        "operationId": "getAllHeritages",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "heritages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Anointed", "Cloud", "Cosmopolitan", "Cottage"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/heritages/{name}": {
      "get": {
        "summary": "Get heritage by name",
        "description": "Returns detailed information about a specific heritage",
        "operationId": "getHeritageByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the heritage (case-insensitive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Heritage"
                }
              }
            }
          },
          "404": {
            "description": "Heritage not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "heritage 'invalid' does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/heritages/lineages": {
      "get": {
        "summary": "Get heritage suggestions by lineage",
        "description": "Returns a map of lineages with their suggested heritages",
        "operationId": "getHeritagesByLineage",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lineages": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Dwarf": ["Fireforge", "Stone"],
                        "Elf": ["Cloud", "Grove"],
                        "Human": ["Cosmopolitan", "Nomadic"]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lineages": {
      "get": {
        "summary": "Get all lineages",
        "description": "Returns a list of all available lineage names",
        "operationId": "getAllLineages",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lineages": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Beastkin", "Dwarf", "Elf", "Human", "Kobold", "Orc", "Syderean", "Smallfolk"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lineages/{name}": {
      "get": {
        "summary": "Get lineage by name",
        "description": "Returns detailed information about a specific lineage",
        "operationId": "getLineageByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the lineage (case-insensitive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lineage"
                }
              }
            }
          },
          "404": {
            "description": "Lineage not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "lineage 'invalid' does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/table/get": {
      "get": {
        "summary": "Get table data",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["class", "damageModifiers", "damageType"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Table data fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { "type": "string" }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CharacterCreateRequest": {
        "type": "object",
        "required": ["name", "class", "lineage", "heritage"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Thorin Ironshield"
          },
          "level": {
            "type": "integer",
            "minimum": 1,
            "maximum": 20,
            "default": 1,
            "example": 1
          },
          "class": {
            "type": "string",
            "example": "fighter"
          },
          "subclass": {
            "type": "string",
            "example": "weapon master"
          },
          "lineage": {
            "type": "string",
            "example": "dwarf"
          },
          "heritage": {
            "type": "string",
            "example": "fireforge"
          },
          "size": {
            "type": "string",
            "example": "Medium"
          },
          "ability_generation_method": {
            "type": "string",
            "enum": ["Standard", "common", "strict", "pointbuy_even", "pointbuy_onemax", "pointbuy_twomax", "pointbuy_threemax"],
            "default": "Standard",
            "example": "Standard"
          },
          "traits": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "Natural Adaptation": "Agile"
            }
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Common", "Dwarvish"]
          }
        }
      },
      "CharacterResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Thorin Ironshield"
          },
          "level": {
            "type": "integer",
            "example": 1
          },
          "class": {
            "type": "string",
            "example": "fighter"
          },
          "subclass": {
            "type": "string",
            "example": "weapon master"
          },
          "lineage": {
            "type": "string",
            "example": "Dwarf"
          },
          "heritage": {
            "type": "string",
            "example": "Fireforge"
          },
          "size": {
            "type": "string",
            "example": "Medium"
          },
          "ability_scores": {
            "type": "object",
            "properties": {
              "str": {"type": "integer", "example": 15},
              "dex": {"type": "integer", "example": 13},
              "con": {"type": "integer", "example": 14},
              "int": {"type": "integer", "example": 10},
              "wis": {"type": "integer", "example": 12},
              "cha": {"type": "integer", "example": 8}
            }
          },
          "ability_modifiers": {
            "type": "object",
            "properties": {
              "str": {"type": "integer", "example": 2},
              "dex": {"type": "integer", "example": 1},
              "con": {"type": "integer", "example": 2},
              "int": {"type": "integer", "example": 0},
              "wis": {"type": "integer", "example": 1},
              "cha": {"type": "integer", "example": -1}
            }
          },
          "traits": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "Darkvision": "You can see in dim light within 60 feet as if it were bright light.",
              "Dwarven Resilience": "Advantage on saving throws against poison."
            }
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Common", "Dwarvish"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          }
        }
      },
      "Background": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "example": "Scholar"
          },
          "Description": {
            "type": "string",
            "example": "You have spent years studying in libraries, universities, or under the tutelage of a master."
          },
          "SkillProficiencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["History", "Arcana"]
          },
          "SkillProficiencyOptions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ChoiceOptions"
            }
          },
          "AdditionalProficiencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Calligrapher's Supplies"]
          },
          "AdditionalProficiencyOptions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ChoiceOptions"
            }
          },
          "Equipment": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Name": {
                  "type": "string"
                },
                "Quantity": {
                  "type": "integer"
                }
              }
            },
            "example": [
              {
                "Name": "Book",
                "Quantity": 3
              },
              {
                "Name": "Ink Pen",
                "Quantity": 1
              }
            ]
          },
          "Money": {
            "type": "object",
            "properties": {
              "Gold": {
                "type": "integer",
                "example": 10
              },
              "Silver": {
                "type": "integer",
                "example": 0
              },
              "Copper": {
                "type": "integer",
                "example": 0
              }
            }
          },
          "EquipmentOptions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ChoiceOptions"
            }
          },
          "TalentOptions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ChoiceOptions"
            }
          },
          "Motivations": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "example": {
              "Adventuring": {
                "1": "I want to recover a lost cultural artifact.",
                "2": "I seek knowledge that can only be gained through field research."
              },
              "Secret": {
                "1": "I was expelled from my university for a theory that challenged orthodoxy.",
                "2": "I've discovered an ancient text that contains forbidden knowledge."
              }
            }
          },
          "BackgroundSource": {
            "type": "string",
            "example": "Players Guide, pg 135"
          }
        }
      },
      "Heritage": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "example": "Anointed"
          },
          "LanguageDefaults": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Common"]
          },
          "LanguageSuggestions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Abyssal", "Celestial", "Infernal"]
          },
          "LanguageSuggestionNote": {
            "type": "string",
            "example": "Typical anointed heritage characters choose an esoteric language aligned with their guiding power."
          },
          "Traits": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "Favored Disciple": "You know the thaumaturgy cantrip and you have advantage on death saves.",
              "Occult Studies": "When you make a check to recall or interpret information about Celestials, Fiends, or creatures with the Outsider tag, you can make a skill check with advantage."
            }
          },
          "TraitOptions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ChoiceOptions"
            }
          },
          "HeritageSource": {
            "type": "string",
            "example": "Players Guide, pg 112"
          }
        }
      },
      "Lineage": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "example": "Dwarf"
          },
          "SuggestedHeritages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Fireforge", "Stone"]
          },
          "AbilityScoreAdjustments": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            },
            "example": {
              "con": 2,
              "wis": 1
            }
          },
          "Size": {
            "type": "string",
            "example": "Medium"
          },
          "BaseSpeed": {
            "type": "integer",
            "example": 25
          },
          "Traits": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "Darkvision": "You can see in dim light within 60 feet of you as if it were bright light, and in darkness as if it were dim light.",
              "Dwarven Resilience": "You have advantage on saving throws against poison, and you have resistance against poison damage."
            }
          },
          "TraitOptions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ChoiceOptions"
            }
          },
          "LineageSource": {
            "type": "string",
            "example": "Players Guide, pg 102"
          }
        }
      },
      "ChoiceOptions": {
        "type": "object",
        "properties": {
          "NumberToSelect": {
            "type": "integer",
            "example": 2
          },
          "Options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Elvish", "Dwarvish", "Orcish"]
          }
        }
      }
    }
  }
}